/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mertbilgic.yazlab2;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author mertbilgic
 */
public class Main extends javax.swing.JFrame {

    MatrixDraw matrix = null;
    public int[] e1;
    public int[] e2;
    boolean[] visit;
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jScrollBar1 = new javax.swing.JScrollBar();
        drawGraph = new javax.swing.JButton();
        result = new javax.swing.JLabel();
        enterMatrix = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nodeCount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sourceText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sinkText = new javax.swing.JTextField();
        maxFlowBtn = new javax.swing.JButton();
        minCutBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        drawGraph.setText("Draw Graph");
        drawGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawGraphActionPerformed(evt);
            }
        });

        enterMatrix.setText("Enter The Matrix ");
        enterMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterMatrixActionPerformed(evt);
            }
        });

        jLabel1.setText("Node Count:");

        nodeCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeCountActionPerformed(evt);
            }
        });

        jLabel2.setText("Source:");

        jLabel3.setText("Sink:");

        maxFlowBtn.setText("MaxFlow");
        maxFlowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxFlowBtnActionPerformed(evt);
            }
        });

        minCutBtn.setText("MinCut");
        minCutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minCutBtnActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nodeCount, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                .addComponent(sourceText))
                            .addComponent(sinkText, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(enterMatrix))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(drawGraph))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(maxFlowBtn)
                        .addGap(76, 76, 76)
                        .addComponent(minCutBtn)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(result, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterMatrix)
                    .addComponent(jLabel1)
                    .addComponent(nodeCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(sourceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(sinkText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(drawGraph)
                        .addGap(64, 64, 64)
                        .addComponent(result)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(minCutBtn)
                                .addComponent(maxFlowBtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void drawGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawGraphActionPerformed

        Board board = new Board("Test");
        String source = sourceText.getText().toString();
        String sink = sinkText.getText().toString();
        if (matrix != null) {
            board.createGUI(matrix.getGraph(), sink, source);
        } else {
            String message = "Enter The Graph";
            board.flashMessage(message);
        }

    }//GEN-LAST:event_drawGraphActionPerformed

    private void enterMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterMatrixActionPerformed
        String text = nodeCount.getText().toString();
        if (!text.isEmpty()) {
            int count = Integer.parseInt(text);
            matrix = new MatrixDraw(count);
            matrix.createAndShowGui(matrix);
        } else {
            String message = "Enter The Node Count";
            Board.flashMessage(message);
        }

    }//GEN-LAST:event_enterMatrixActionPerformed

    private void nodeCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeCountActionPerformed

    private void minCutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minCutBtnActionPerformed
        // TODO add your handling code here:
      MinCut min = new MinCut();
      int source = Integer.parseInt(sourceText.getText().toString());
      int sink = Integer.parseInt(sinkText.getText().toString());
      Result2 result2 = min.minCut(matrix.getGraph(), source, sink);
      int v = Integer.parseInt(nodeCount.getText().toString());
      min.setV(v);
        Board board = new Board("Test");

        if (matrix != null) {
            board.createGUI(result2.getGraph(),String.valueOf(sink), String.valueOf(source));
        } else {
            String message = "Enter The Graph";
            board.flashMessage(message);
        }
     
    }//GEN-LAST:event_minCutBtnActionPerformed

    private void maxFlowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxFlowBtnActionPerformed
        MaxFlow max = new MaxFlow();

        int source = Integer.parseInt(sourceText.getText().toString());
        int sink = Integer.parseInt(sinkText.getText().toString());
        int v = Integer.parseInt(nodeCount.getText().toString());
        max.setV(v);

        Result result = max.fordFulkerson(matrix.getGraph(), source, sink);

        Board board = new Board("Test");

        if (matrix != null) {
            board.createGUI(result.getGraph(),String.valueOf(sink), String.valueOf(source));
        } else {
            String message = "Enter The Graph";
            board.flashMessage(message);
        }


    }//GEN-LAST:event_maxFlowBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton drawGraph;
    private javax.swing.JButton enterMatrix;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton maxFlowBtn;
    private javax.swing.JButton minCutBtn;
    private javax.swing.JTextField nodeCount;
    private javax.swing.JLabel result;
    private javax.swing.JTextField sinkText;
    private javax.swing.JTextField sourceText;
    // End of variables declaration//GEN-END:variables
}
